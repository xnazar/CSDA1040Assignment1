rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# Extract book list
booklist<-rating_matrix_long%>%
select(ISBN,Book_Title)%>%
arrange(Book_Title)%>%
unique()
# Save list of books into a RDS file
saveRDS(booklist, file="booklist.RDS")
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
# Removing UserId from Rating Matrix
#rating_matrix = as.matrix(rating_matrix[,-1])
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
cloud<-ratings_books_users%>%
group_by(Book_Title)%>%
dplyr::summarize(count_Book_Title=n())%>%
filter(count_Book_Title>500)%>%
select(Book_Title,count_Book_Title)%>%
head(50)
View(cloud)
# Merge Ratings and Books DataFrames to "ratings_books" DataFrame
ratings_books<-left_join(ratings_df,books_df,by="ISBN")
# Merge ratings_books and Users DataFrames to "ratings_books_users" DataFrame
ratings_books_users<-left_join(ratings_books,users_df,by="UserId")
# Remove NAs from DataFrame
ratings_books_users<-na.omit(ratings_books_users)
cloud<-ratings_books_users%>%
group_by(Book_Title)%>%
dplyr::summarize(count_Book_Title=n())%>%
filter(count_Book_Title>500)%>%
select(Book_Title,count_Book_Title)%>%
head(50)
View(cloud)
# Remove NAs from DataFrame
ratings_books_users<-na.omit(ratings_books_users)
cloud<-ratings_books_users%>%
group_by(Book_Title)%>%
dplyr::summarize(count_Book_Title=n())%>%
filter(count_Book_Title>500)%>%
select(Book_Title,count_Book_Title)%>%
head(50)
# Save books list into a RDS file
saveRDS(cloud, file = "cloud.Rds")
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# Extract book list
booklist<-rating_matrix_long%>%
select(ISBN,Book_Title)%>%
arrange(Book_Title)%>%
unique()
# Save list of books into a RDS file
saveRDS(booklist, file="booklist.RDS")
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# Extract book list
booklist<-rating_matrix_long%>%
select(ISBN,Book_Title)%>%
arrange(Book_Title)%>%
unique()
# Save list of books into a RDS file
saveRDS(booklist, file="booklist.RDS")
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:27], main = "Heatmap of the first rows and columns")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:15, 1:15], main = "Heatmap of the first rows and columns")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
View(ratings_norm)
View(rating_matrix_long)
#Heat Map of first 10 rows and 15 columns
#image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
image(rating_matrix[])
#Heat Map of first 10 rows and 15 columns
#image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
image(rating_matrix)
#Heat Map of first 10 rows and 15 columns
#image(rating_matrix[50:60, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[50:60, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[100:110, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(ISBN)
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[100:110, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
#arrange(UserId)
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)
#arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)
#arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[100:110, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[0:10, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)
#arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)
#arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)
#arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)
#arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
view(rating_matrix)
View(rating_matrix)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
View(rating_matrix)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
View(rating_matrix)
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
View(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating)
arrange(UserId)
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
View(rating_matrix)
```{r}
```{r}
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,-1])
View(rating_matrix)
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
#image(rating_matrix[])
# Recommender Model
ratingmodel = Recommender(rating_matrix, method = "UBCF", param=list(method="Cosine",nn=10))
# Predictions
Top_5_pred = predict(ratingmodel, rating_matrix[2], n=5)
Top_5_List = as(Top_5_pred, "list")
# Recommended predictions for a user based on previous ratings
recomdf=data.frame(Top_5_List)
colnames(recomdf)="ISBN"
bookrecomdf<-left_join(recomdf,books_df,by="ISBN")%>%
select(Book_Title)%>%
print()
install.packages("xQuartz")
install.packages("tinytex")
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# Extract book list
booklist<-rating_matrix_long%>%
select(ISBN,Book_Title)%>%
arrange(Book_Title)%>%
unique()
# Save list of books into a RDS file
saveRDS(booklist, file="booklist.RDS")
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
View(rating_matrix)
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserID)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
# Extract book list
booklist<-rating_matrix_long%>%
select(ISBN,Book_Title)%>%
arrange(Book_Title)%>%
unique()
# Save list of books into a RDS file
saveRDS(booklist, file="booklist.RDS")
View(booklist)
# User-Book Rating matrix
rating_matrix<-rating_matrix_long%>%pivot_wider(names_from = ISBN,values_from=Rating)
View(rating_matrix)
# Removing UserId and Book_Title from Rating Matrix
rating_matrix = as.matrix(rating_matrix[,0:-2])
View(rating_matrix)
# Real matrix
object.size(rating_matrix)
rating_matrix = as(rating_matrix, "realRatingMatrix")
object.size(rating_matrix)
# Similarity Between Users
similarity_users <- similarity(rating_matrix[1:10, ],
method = "jaccard",
which = "userId")
as.matrix(similarity_users)
image(as.matrix(similarity_users), main = "User similarity")
# Similarity between Books
similarity_books <- similarity(rating_matrix[, 1:10], method =
"cosine", which = "items")
as.matrix(similarity_books)
image(as.matrix(similarity_books), main = "Book similarity")
#Heat Map of first 10 rows and 15 columns
image(rating_matrix[1:10, 1:15], main = "Heatmap of the first rows and columns")
# Recommender Model
ratingmodel = Recommender(rating_matrix, method = "UBCF", param=list(method="Cosine",nn=10))
ratingmodel2 = Recommender(rating_matrix, method = "ICBF", param=list(method="Cosine",nn=10))
# Recommender Model
ratingmodel = Recommender(rating_matrix, method = "UBCF", param=list(method="Cosine",nn=10))
ratingmodel2 = Recommender(rating_matrix, method = "UBCF", param=list(method="pearson",nn=10))
# Predictions
# Obtain top 5 recommendations for 2nd user in dataset
Top_5_pred = predict(ratingmodel2, rating_matrix[2], n=5)
Top_5_List = as(Top_5_pred, "list")
# Recommended predictions for a user based on previous ratings
recomdf=data.frame(Top_5_List)
colnames(recomdf)="ISBN"
bookrecomdf<-left_join(recomdf,books_df,by="ISBN")%>%
select(Book_Title)%>%
print()
# Predictions
# Obtain top 5 recommendations for 2nd user in dataset
Top_5_pred = predict(ratingmodel, rating_matrix[2], n=5)
Top_5_List = as(Top_5_pred, "list")
# Recommended predictions for a user based on previous ratings
recomdf=data.frame(Top_5_List)
colnames(recomdf)="ISBN"
bookrecomdf<-left_join(recomdf,books_df,by="ISBN")%>%
select(Book_Title)%>%
print()
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating,Book_Title)%>%
arrange(UserId)
# Subset data to users who have rated 50 or more books
rating_matrix_long<-ratings_norm%>%
add_count(UserId)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating)%>%
arrange(UserId)
# Narrow down to only books that were rated 50 or more times
rating_matrix_long<-rating_matrix_long%>%
add_count(ISBN)%>%
dplyr::filter(n>50)%>%
select(ISBN,UserId,Rating)%>%
arrange(ISBN)
#Rating Distribution and user count for the subset
ggplot(rating_matrix_long, aes(Rating)) + geom_histogram(binwidth = 0.25)
